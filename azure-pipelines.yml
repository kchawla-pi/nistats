# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'TestWindows'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      Python27:
        python.version: '2.7'
      Python35:
        python.version: '3.5'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: python -m pip install --upgrade pip && pip install --prefer-binary -r requirements-dev.txt
    displayName: 'Install dependencies'

  - script: |
      pip install pytest
      pip install .
      pytest ./nistats/tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()


- job: 'test_expeceted_to_fail_installation_on_nilearn_07x'
  pool:
    vmImage: 'ubuntu-18.04'
  strategy:
    matrix:
      Python27:
        python.version: '3.6'
    maxParallel: 4

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - script: |
      set -e
      python -m pip install --upgrade pip
      pip install --prefer-binary setuptools wheel
      pip install git+https://github.com/nilearn/nilearn.git@master\#egg\=nilearn
    displayName: 'Install Nilearn master (>=0.7.x) & dependencies for building Nistats'

  - script: |
      set -e
      python setup.py sdist bdist_wheel
    displayName: 'Build Nistats'

  - script: |
      set -e
      pip install dist/nistats-*-py3-none-any.whl 2>&1 | grep "^ERROR"
    displayName: 'Attempt to install Nistats from wheel When Nilearn >= 0.7.x'
